$date
	Mon Jun  9 00:49:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! read_data2 [31:0] $end
$var wire 32 " read_data1 [31:0] $end
$var wire 32 # alu_result [31:0] $end
$var reg 1 $ CLK $end
$var reg 2 % alu_op [1:0] $end
$var reg 5 & read_addr1 [4:0] $end
$var reg 5 ' read_addr2 [4:0] $end
$var reg 1 ( reset $end
$var reg 5 ) write_addr [4:0] $end
$var reg 32 * write_data [31:0] $end
$var reg 1 + write_enable $end
$scope module dut $end
$var wire 1 $ CLK $end
$var wire 2 , alu_op [1:0] $end
$var wire 5 - read_addr1 [4:0] $end
$var wire 5 . read_addr2 [4:0] $end
$var wire 32 / read_data1 [31:0] $end
$var wire 32 0 read_data2 [31:0] $end
$var wire 1 ( reset $end
$var wire 5 1 write_addr [4:0] $end
$var wire 32 2 write_data [31:0] $end
$var wire 1 + write_enable $end
$var wire 32 3 reg_data2 [31:0] $end
$var wire 32 4 reg_data1 [31:0] $end
$var wire 32 5 alu_result [31:0] $end
$scope module alu_unit $end
$var wire 2 6 opcode [1:0] $end
$var wire 32 7 B [31:0] $end
$var wire 32 8 A [31:0] $end
$var reg 32 9 result [31:0] $end
$upscope $end
$scope module rf $end
$var wire 5 : A1 [4:0] $end
$var wire 5 ; A2 [4:0] $end
$var wire 5 < A3 [4:0] $end
$var wire 1 $ CLK $end
$var wire 32 = WD3 [31:0] $end
$var wire 1 + WE3 $end
$var reg 32 > RD1 [31:0] $end
$var reg 32 ? RD2 [31:0] $end
$var integer 32 @ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
0+
b0 *
b0 )
1(
b0 '
b0 &
b0 %
0$
b0 #
b0 "
b0 !
$end
#5
1$
#10
0$
0(
#15
1$
#20
0$
1+
b1010 *
b1010 2
b1010 =
b1010 )
b1010 1
b1010 <
#25
1$
#30
0$
0+
#35
1$
#40
0$
1+
b1111 *
b1111 2
b1111 =
b1111 )
b1111 1
b1111 <
#45
1$
#50
0$
0+
#55
1$
#60
b11001 #
b11001 5
b11001 9
b1111 !
b1111 0
b1111 3
b1111 7
b1111 ?
b1010 "
b1010 /
b1010 4
b1010 8
b1010 >
0$
b1111 '
b1111 .
b1111 ;
b1010 &
b1010 -
b1010 :
#65
1$
#70
0$
1+
b11001 *
b11001 2
b11001 =
b10100 )
b10100 1
b10100 <
#75
1$
#80
0$
0+
#85
1$
#90
0$
1+
b10100 *
b10100 2
b10100 =
b1010 )
b1010 1
b1010 <
#95
b100011 #
b100011 5
b100011 9
b10100 "
b10100 /
b10100 4
b10100 8
b10100 >
1$
#100
0$
0+
#105
1$
#110
0$
1+
b1111 *
b1111 2
b1111 =
b1111 )
b1111 1
b1111 <
#115
1$
#120
0$
0+
#125
1$
#130
b101 #
b101 5
b101 9
0$
b1 %
b1 ,
b1 6
#135
1$
#140
0$
1+
b101 *
b101 2
b101 =
b10100 )
b10100 1
b10100 <
#145
1$
#150
0$
0+
#155
1$
#160
0$
1+
b11111 *
b11111 2
b11111 =
b1010 )
b1010 1
b1010 <
#165
b10000 #
b10000 5
b10000 9
b11111 "
b11111 /
b11111 4
b11111 8
b11111 >
1$
#170
0$
0+
#175
1$
#180
0$
1+
b10 *
b10 2
b10 =
b1111 )
b1111 1
b1111 <
#185
b11101 #
b11101 5
b11101 9
b10 !
b10 0
b10 3
b10 7
b10 ?
1$
#190
0$
0+
#195
1$
#200
b1111100 #
b1111100 5
b1111100 9
0$
b10 %
b10 ,
b10 6
#205
1$
#210
0$
1+
b1111100 *
b1111100 2
b1111100 =
b10100 )
b10100 1
b10100 <
#215
1$
#220
0$
0+
#225
1$
#230
b111 #
b111 5
b111 9
0$
b11 %
b11 ,
b11 6
#235
1$
#240
0$
1+
b111 *
b111 2
b111 =
#245
1$
#250
0$
0+
#255
1$
#260
b1 #
b1 5
b1 9
b111 "
b111 /
b111 4
b111 8
b111 >
0$
b10100 &
b10100 -
b10100 :
#265
1$
#270
0$
#275
1$
#280
0$
#285
1$
#290
0$
#295
1$
#300
0$
#305
1$
#310
0$
#315
1$
#320
0$
