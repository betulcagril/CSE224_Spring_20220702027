
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend: /home/betulcagril/.volare/sky130A/libs.ref/sky130_fd_sc_hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/register_file.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/register_file.v' to AST representation.
Storing AST representation for module `$abstract\register_file'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/instruction_decoder.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/instruction_decoder.v' to AST representation.
Storing AST representation for module `$abstract\instruction_decoder'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/seven_segment_display.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/seven_segment_display.v' to AST representation.
Storing AST representation for module `$abstract\seven_segment_display'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/program_counter.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/program_counter.v' to AST representation.
Storing AST representation for module `$abstract\program_counter'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/semi_cpu.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/semi_cpu.v' to AST representation.
Storing AST representation for module `$abstract\semi_cpu'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/alu.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/alu.v' to AST representation.
Storing AST representation for module `$abstract\alu'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openlane/designs/semi_cpu/src/instruction_memory.v
Parsing SystemVerilog input from `/openlane/designs/semi_cpu/src/instruction_memory.v' to AST representation.
Storing AST representation for module `$abstract\instruction_memory'.
Successfully finished Verilog frontend.

9. Executing HIERARCHY pass (managing design hierarchy).

10. Executing AST frontend in derive mode using pre-parsed AST for module `\semi_cpu'.
Generating RTLIL representation for module `\semi_cpu'.

10.1. Analyzing design hierarchy..
Top module:  \semi_cpu

10.2. Executing AST frontend in derive mode using pre-parsed AST for module `\seven_segment_display'.
Generating RTLIL representation for module `\seven_segment_display'.

10.3. Executing AST frontend in derive mode using pre-parsed AST for module `\alu'.
Generating RTLIL representation for module `\alu'.

10.4. Executing AST frontend in derive mode using pre-parsed AST for module `\register_file'.
Generating RTLIL representation for module `\register_file'.

10.5. Executing AST frontend in derive mode using pre-parsed AST for module `\instruction_decoder'.
Generating RTLIL representation for module `\instruction_decoder'.

10.6. Executing AST frontend in derive mode using pre-parsed AST for module `\instruction_memory'.
Generating RTLIL representation for module `\instruction_memory'.

10.7. Executing AST frontend in derive mode using pre-parsed AST for module `\program_counter'.
Generating RTLIL representation for module `\program_counter'.

10.8. Analyzing design hierarchy..
Top module:  \semi_cpu
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter

10.9. Analyzing design hierarchy..
Top module:  \semi_cpu
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter
Removing unused module `$abstract\instruction_memory'.
Removing unused module `$abstract\alu'.
Removing unused module `$abstract\semi_cpu'.
Removing unused module `$abstract\program_counter'.
Removing unused module `$abstract\seven_segment_display'.
Removing unused module `$abstract\instruction_decoder'.
Removing unused module `$abstract\register_file'.
Removed 7 unused modules.

11. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/hierarchy.dot'.
Dumping module semi_cpu to page 1.
Renaming module semi_cpu to semi_cpu.

12. Executing TRIBUF pass.

13. Executing HIERARCHY pass (managing design hierarchy).

13.1. Analyzing design hierarchy..
Top module:  \semi_cpu
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter

13.2. Analyzing design hierarchy..
Top module:  \semi_cpu
Used module:     \seven_segment_display
Used module:     \alu
Used module:     \register_file
Used module:     \instruction_decoder
Used module:     \instruction_memory
Used module:     \program_counter
Removed 0 unused modules.

14. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

15. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3 in module semi_cpu.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/instruction_memory.v:6$146 in module instruction_memory.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144 in module instruction_decoder.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144 in module instruction_decoder.
Marked 2 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/register_file.v:31$74 in module register_file.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/register_file.v:24$65 in module register_file.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu/src/alu.v:8$25 in module alu.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/alu.v:8$25 in module alu.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:61$23 in module seven_segment_display.
Removed 1 dead cases from process $proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7 in module seven_segment_display.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7 in module seven_segment_display.
Marked 1 switch rules as full_case in process $proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147 in module program_counter.
Removed a total of 3 dead cases.

16. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 53 assignments to connections.

17. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:8$24'.
  Set init value: \refresh_counter = 20'00000000000000000000

18. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\semi_cpu.$proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3'.
Found async reset \reset in `\program_counter.$proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147'.

19. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~9 debug messages>

20. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\semi_cpu.$proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3'.
     1/1: $0\result[31:0]
Creating decoders for process `\instruction_memory.$proc$/openlane/designs/semi_cpu/src/instruction_memory.v:6$146'.
     1/1: $1\instruction[31:0]
Creating decoders for process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
     1/8: { $2\use_immediate[0:0] $2\reg_write[0:0] $2\alu_op[2:0] }
     2/8: $1\use_immediate[0:0]
     3/8: $1\reg_write[0:0]
     4/8: $1\immediate[31:0]
     5/8: $1\write_addr[4:0]
     6/8: $1\read_addr2[4:0]
     7/8: $1\read_addr1[4:0]
     8/8: $1\alu_op[2:0]
Creating decoders for process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
Creating decoders for process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:31$74'.
     1/2: $1\RD2[31:0]
     2/2: $1\RD1[31:0]
Creating decoders for process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
     1/3: $1$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$73
     2/3: $1$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_DATA[31:0]$72
     3/3: $1$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_ADDR[4:0]$71
Creating decoders for process `\alu.$proc$/openlane/designs/semi_cpu/src/alu.v:8$25'.
     1/1: $1\result[31:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:8$24'.
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:61$23'.
     1/1: $1\seg[6:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7'.
     1/2: $1\digit[3:0]
     2/2: $1\an[7:0]
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:20$6'.
Creating decoders for process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:11$4'.
Creating decoders for process `\program_counter.$proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147'.
     1/1: $0\pc[4:0]

21. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\instruction_memory.\instruction' from process `\instruction_memory.$proc$/openlane/designs/semi_cpu/src/instruction_memory.v:6$146'.
No latch inferred for signal `\instruction_decoder.\alu_op' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\read_addr1' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\read_addr2' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\write_addr' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\immediate' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\reg_write' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\instruction_decoder.\use_immediate' from process `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
No latch inferred for signal `\register_file.\i' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$32_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$33_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$34_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$35_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$36_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$37_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$38_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$39_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$40_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$41_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$42_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$43_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$44_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$45_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$46_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$47_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$48_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$49_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$50_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$51_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$52_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$53_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$54_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$55_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$56_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$57_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$58_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$59_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$60_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$61_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$62_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$63_EN' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
No latch inferred for signal `\register_file.\RD1' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:31$74'.
No latch inferred for signal `\register_file.\RD2' from process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:31$74'.
No latch inferred for signal `\alu.\result' from process `\alu.$proc$/openlane/designs/semi_cpu/src/alu.v:8$25'.
No latch inferred for signal `\seven_segment_display.\seg' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:61$23'.
No latch inferred for signal `\seven_segment_display.\an' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7'.
No latch inferred for signal `\seven_segment_display.\digit' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7'.
No latch inferred for signal `\seven_segment_display.\display_number' from process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:20$6'.

22. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\semi_cpu.\result' using process `\semi_cpu.$proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3'.
  created $adff cell `$procdff$236' with positive edge clock and positive level reset.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_ADDR' using process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
  created $dff cell `$procdff$237' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_DATA' using process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
  created $dff cell `$procdff$238' with positive edge clock.
Creating register for signal `\register_file.$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN' using process `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
  created $dff cell `$procdff$239' with positive edge clock.
Creating register for signal `\seven_segment_display.\refresh_counter' using process `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:11$4'.
  created $dff cell `$procdff$240' with positive edge clock.
Creating register for signal `\program_counter.\pc' using process `\program_counter.$proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147'.
  created $adff cell `$procdff$241' with positive edge clock and positive level reset.

23. Executing PROC_MEMWR pass (convert process memory writes to cells).

24. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\semi_cpu.$proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3'.
Removing empty process `semi_cpu.$proc$/openlane/designs/semi_cpu/src/semi_cpu.v:65$3'.
Found and cleaned up 1 empty switch in `\instruction_memory.$proc$/openlane/designs/semi_cpu/src/instruction_memory.v:6$146'.
Removing empty process `instruction_memory.$proc$/openlane/designs/semi_cpu/src/instruction_memory.v:6$146'.
Found and cleaned up 2 empty switches in `\instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
Removing empty process `instruction_decoder.$proc$/openlane/designs/semi_cpu/src/instruction_decoder.v:19$144'.
Removing empty process `register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:0$111'.
Found and cleaned up 2 empty switches in `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:31$74'.
Removing empty process `register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:31$74'.
Found and cleaned up 1 empty switch in `\register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
Removing empty process `register_file.$proc$/openlane/designs/semi_cpu/src/register_file.v:24$65'.
Found and cleaned up 1 empty switch in `\alu.$proc$/openlane/designs/semi_cpu/src/alu.v:8$25'.
Removing empty process `alu.$proc$/openlane/designs/semi_cpu/src/alu.v:8$25'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:8$24'.
Found and cleaned up 1 empty switch in `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:61$23'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:61$23'.
Found and cleaned up 1 empty switch in `\seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:24$7'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:20$6'.
Removing empty process `seven_segment_display.$proc$/openlane/designs/semi_cpu/src/seven_segment_display.v:11$4'.
Found and cleaned up 1 empty switch in `\program_counter.$proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147'.
Removing empty process `program_counter.$proc$/openlane/designs/semi_cpu/src/program_counter.v:8$147'.
Cleaned up 11 empty switches.

25. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu...
Checking module instruction_memory...
Checking module instruction_decoder...
Checking module register_file...
Checking module alu...
Checking module seven_segment_display...
Checking module program_counter...
Found and reported 0 problems.

26. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
Optimizing module instruction_memory.
<suppressed ~1 debug messages>
Optimizing module instruction_decoder.
<suppressed ~8 debug messages>
Optimizing module register_file.
<suppressed ~3 debug messages>
Optimizing module alu.
<suppressed ~1 debug messages>
Optimizing module seven_segment_display.
<suppressed ~2 debug messages>
Optimizing module program_counter.

27. Executing FLATTEN pass (flatten design).
Deleting now unused module instruction_memory.
Deleting now unused module instruction_decoder.
Deleting now unused module register_file.
Deleting now unused module alu.
Deleting now unused module seven_segment_display.
Deleting now unused module program_counter.
<suppressed ~6 debug messages>

28. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 4 unused cells and 138 unused wires.
<suppressed ~5 debug messages>

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\decoder.$procmux$169.
Removed 1 multiplexer ports.
<suppressed ~18 debug messages>

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
    New ctrl vector for $pmux cell $flatten\alu_unit.$procmux$207: { $flatten\alu_unit.$procmux$214_CTRL $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 }
    Consolidated identical input bits for $mux cell $flatten\rf.$procmux$199:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68
      New ports: A=1'0, B=1'1, Y=$flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0]
      New connections: $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [31:1] = { $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] $flatten\rf.$0$memwr$\registers$/openlane/designs/semi_cpu/src/register_file.v:26$64_EN[31:0]$68 [0] }
  Optimizing cells in module \semi_cpu.
Performed a total of 2 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing FSM pass (extract and optimize FSM).

31.1. Executing FSM_DETECT pass (finding FSMs in design).

31.2. Executing FSM_EXTRACT pass (extracting FSM from design).

31.3. Executing FSM_OPT pass (simple optimizations of FSMs).

31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

31.5. Executing FSM_OPT pass (simple optimizations of FSMs).

31.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

31.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

31.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

32. Executing OPT pass (performing simple optimizations).

32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~17 debug messages>

32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

32.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$236 ($adff) from module semi_cpu (D = \rf.WD3, Q = \result).
Adding EN signal on $flatten\pc_unit.$procdff$241 ($adff) from module semi_cpu (D = $flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148_Y [4:0], Q = \pc_unit.pc).

32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

32.9. Rerunning OPT passes. (Maybe there is more to do..)

32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

32.13. Executing OPT_DFF pass (perform DFF optimizations).

32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

32.16. Finished OPT passes. (There is nothing left to do.)

33. Executing WREDUCE pass (reducing word size of cells).
Removed top 29 address bits (of 32) from memory init port semi_cpu.$flatten\decoder.$auto$mem.cc:328:emit$152 ($flatten\decoder.$auto$proc_rom.cc:150:do_switch$150).
Removed top 28 address bits (of 32) from memory init port semi_cpu.$flatten\display.$auto$mem.cc:328:emit$156 ($flatten\display.$auto$proc_rom.cc:150:do_switch$154).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$9 ($div).
Removed top 25 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$11 ($div).
Removed top 22 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$13 ($div).
Removed top 18 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15 ($div).
Removed top 15 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17 ($div).
Removed top 12 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$19 ($div).
Removed top 8 bits (of 32) from port B of cell semi_cpu.$flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$21 ($div).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$20 ($mod).
Removed top 28 bits (of 32) from port B of cell semi_cpu.$flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$22 ($mod).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$100 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$101 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$102 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$103 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$104 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$105 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$106 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$107 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$108 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$109 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$110 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$79 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$80 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$81 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$82 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$83 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$84 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$85 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$86 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$87 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$88 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$89 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$90 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$91 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$92 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$93 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$94 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$95 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$96 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$97 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$98 (rf.registers).
Removed top 27 address bits (of 32) from memory init port semi_cpu.$flatten\rf.$meminit$\registers$/openlane/designs/semi_cpu/src/register_file.v:19$99 (rf.registers).
Removed top 31 bits (of 32) from port B of cell semi_cpu.$flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148 ($add).
Removed top 27 bits (of 32) from port Y of cell semi_cpu.$flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148 ($add).
Removed top 4 bits (of 5) from port B of cell semi_cpu.$flatten\imem.$procmux$165_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell semi_cpu.$flatten\imem.$procmux$164_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell semi_cpu.$flatten\imem.$procmux$163_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell semi_cpu.$flatten\imem.$procmux$162_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell semi_cpu.$flatten\imem.$procmux$161_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell semi_cpu.$flatten\alu_unit.$procmux$214_CMP1 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu.$flatten\alu_unit.$procmux$213_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu.$flatten\alu_unit.$procmux$212_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell semi_cpu.$flatten\display.$procmux$223_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu.$flatten\display.$procmux$222_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell semi_cpu.$flatten\display.$procmux$221_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell semi_cpu.$flatten\display.$add$/openlane/designs/semi_cpu/src/seven_segment_display.v:12$5 ($add).
Removed top 12 bits (of 32) from port Y of cell semi_cpu.$flatten\display.$add$/openlane/designs/semi_cpu/src/seven_segment_display.v:12$5 ($add).
Removed top 27 bits (of 32) from wire semi_cpu.$flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148_Y.

34. Executing PEEPOPT pass (run peephole optimizers).

35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

36. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module semi_cpu:
  creating $macc model for $flatten\alu_unit.$add$/openlane/designs/semi_cpu/src/alu.v:11$26 ($add).
  creating $macc model for $flatten\alu_unit.$sub$/openlane/designs/semi_cpu/src/alu.v:12$27 ($sub).
  creating $macc model for $flatten\display.$add$/openlane/designs/semi_cpu/src/seven_segment_display.v:12$5 ($add).
  creating $macc model for $flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148 ($add).
  creating $alu model for $macc $flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148.
  creating $alu model for $macc $flatten\display.$add$/openlane/designs/semi_cpu/src/seven_segment_display.v:12$5.
  creating $alu model for $macc $flatten\alu_unit.$sub$/openlane/designs/semi_cpu/src/alu.v:12$27.
  creating $alu model for $macc $flatten\alu_unit.$add$/openlane/designs/semi_cpu/src/alu.v:11$26.
  creating $alu cell for $flatten\alu_unit.$add$/openlane/designs/semi_cpu/src/alu.v:11$26: $auto$alumacc.cc:485:replace_alu$250
  creating $alu cell for $flatten\alu_unit.$sub$/openlane/designs/semi_cpu/src/alu.v:12$27: $auto$alumacc.cc:485:replace_alu$253
  creating $alu cell for $flatten\display.$add$/openlane/designs/semi_cpu/src/seven_segment_display.v:12$5: $auto$alumacc.cc:485:replace_alu$256
  creating $alu cell for $flatten\pc_unit.$add$/openlane/designs/semi_cpu/src/program_counter.v:12$148: $auto$alumacc.cc:485:replace_alu$259
  created 4 $alu and 0 $macc cells.

37. Executing SHARE pass (SAT-based resource sharing).
Found 20 cells in module semi_cpu that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:40$78 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate }.
    Found 1 candidates: $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76
    Analyzing resource sharing with $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76 ($memrd):
      Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y }.
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:40$78: { $flatten\alu_unit.$procmux$211_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate } = 3'100
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:40$78: { $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate } = 3'100
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:40$78: { $auto$opt_reduce.cc:134:opt_pmux$246 $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate } = 3'100
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:40$78: { $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate } = 3'100
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76: { $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y } = 2'10
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76: { $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y } = 2'10
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76: { $flatten\alu_unit.$procmux$211_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y } = 2'10
      Activation pattern for cell $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76: { $auto$opt_reduce.cc:134:opt_pmux$246 $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y } = 2'10
      Size of SAT problem: 0 cells, 470 variables, 1298 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:37$77_Y \use_immediate } = 7'0001000
  Analyzing resource sharing options for $flatten\rf.$memrd$\registers$/openlane/designs/semi_cpu/src/register_file.v:35$76 ($memrd):
    Found 4 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $flatten\rf.$eq$/openlane/designs/semi_cpu/src/register_file.v:32$75_Y }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$22 ($mod):
    Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$217_CMP.
    Found 7 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$20 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$20 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$218_CMP.
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$22: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$20: $flatten\display.$procmux$218_CMP = 1'1
      Size of SAT problem: 0 cells, 28 variables, 71 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$22: $auto$share.cc:977:make_cell_activation_logic$262
      New cell: $auto$share.cc:667:make_supercell$269 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$269 ($mod):
    Found 2 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP }.
    Found 6 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$219_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$269: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$269: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18: $flatten\display.$procmux$219_CMP = 1'1
      Size of SAT problem: 0 cells, 40 variables, 106 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18: $auto$share.cc:977:make_cell_activation_logic$272
      New cell: $auto$share.cc:667:make_supercell$279 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$279 ($mod):
    Found 3 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP }.
    Found 5 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$220_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$279: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$279: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$279: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16: $flatten\display.$procmux$220_CMP = 1'1
      Size of SAT problem: 0 cells, 48 variables, 131 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16: $auto$share.cc:977:make_cell_activation_logic$282
      New cell: $auto$share.cc:667:make_supercell$289 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$289 ($mod):
    Found 4 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP }.
    Found 4 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$221_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$289: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$289: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$289: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$289: $flatten\display.$procmux$220_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14: $flatten\display.$procmux$221_CMP = 1'1
      Size of SAT problem: 0 cells, 58 variables, 162 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14: $auto$share.cc:977:make_cell_activation_logic$292
      New cell: $auto$share.cc:667:make_supercell$299 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$299 ($mod):
    Found 5 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP $flatten\display.$procmux$221_CMP }.
    Found 3 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$222_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$299: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$299: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$299: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$299: $flatten\display.$procmux$220_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$299: $flatten\display.$procmux$221_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12: $flatten\display.$procmux$222_CMP = 1'1
      Size of SAT problem: 0 cells, 66 variables, 187 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12: $auto$share.cc:977:make_cell_activation_logic$302
      New cell: $auto$share.cc:667:make_supercell$309 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$309 ($mod):
    Found 6 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP $flatten\display.$procmux$221_CMP $flatten\display.$procmux$222_CMP }.
    Found 2 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$223_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$220_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$221_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$309: $flatten\display.$procmux$222_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10: $flatten\display.$procmux$223_CMP = 1'1
      Size of SAT problem: 0 cells, 74 variables, 212 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10: $auto$share.cc:977:make_cell_activation_logic$312
      New cell: $auto$share.cc:667:make_supercell$319 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$319 ($mod):
    Found 7 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP $flatten\display.$procmux$221_CMP $flatten\display.$procmux$222_CMP $flatten\display.$procmux$223_CMP }.
    Found 1 candidates: $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8
    Analyzing resource sharing with $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8 ($mod):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$224_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$220_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$221_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$222_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$319: $flatten\display.$procmux$223_CMP = 1'1
      Activation pattern for cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8: $flatten\display.$procmux$224_CMP = 1'1
      Size of SAT problem: 0 cells, 82 variables, 237 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8: $auto$share.cc:977:make_cell_activation_logic$322
      New cell: $auto$share.cc:667:make_supercell$329 ($mod)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$329 ($mod):
    Found 8 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP $flatten\display.$procmux$221_CMP $flatten\display.$procmux$222_CMP $flatten\display.$procmux$223_CMP $flatten\display.$procmux$224_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$21 ($div):
    Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$217_CMP.
    Found 3 candidates: $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$19 $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17 $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15
    Analyzing resource sharing with $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$19 ($div):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$218_CMP.
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$21: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$19: $flatten\display.$procmux$218_CMP = 1'1
      Size of SAT problem: 0 cells, 28 variables, 71 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$21: $auto$share.cc:977:make_cell_activation_logic$332
      New cell: $auto$share.cc:667:make_supercell$339 ($div)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$339 ($div):
    Found 2 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP }.
    Found 2 candidates: $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17 $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15
    Analyzing resource sharing with $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17 ($div):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$219_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$339: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$339: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17: $flatten\display.$procmux$219_CMP = 1'1
      Size of SAT problem: 0 cells, 40 variables, 106 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17: $auto$share.cc:977:make_cell_activation_logic$342
      New cell: $auto$share.cc:667:make_supercell$349 ($div)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$349 ($div):
    Found 3 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP }.
    Found 1 candidates: $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15
    Analyzing resource sharing with $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15 ($div):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$220_CMP.
      Activation pattern for cell $auto$share.cc:667:make_supercell$349: $flatten\display.$procmux$217_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$349: $flatten\display.$procmux$218_CMP = 1'1
      Activation pattern for cell $auto$share.cc:667:make_supercell$349: $flatten\display.$procmux$219_CMP = 1'1
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15: $flatten\display.$procmux$220_CMP = 1'1
      Size of SAT problem: 0 cells, 48 variables, 131 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15: $auto$share.cc:977:make_cell_activation_logic$352
      New cell: $auto$share.cc:667:make_supercell$359 ($div)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$359 ($div):
    Found 4 activation_patterns using ctrl signal { $flatten\display.$procmux$217_CMP $flatten\display.$procmux$218_CMP $flatten\display.$procmux$219_CMP $flatten\display.$procmux$220_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$13 ($div):
    Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$221_CMP.
    Found 1 candidates: $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$11
    Analyzing resource sharing with $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$11 ($div):
      Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$222_CMP.
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$13: $flatten\display.$procmux$221_CMP = 1'1
      Activation pattern for cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$11: $flatten\display.$procmux$222_CMP = 1'1
      Size of SAT problem: 0 cells, 28 variables, 71 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$13: $auto$share.cc:977:make_cell_activation_logic$362
      New cell: $auto$share.cc:667:make_supercell$369 ($div)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$369 ($div):
    Found 2 activation_patterns using ctrl signal { $flatten\display.$procmux$221_CMP $flatten\display.$procmux$222_CMP }.
    No candidates found.
  Analyzing resource sharing options for $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$9 ($div):
    Found 1 activation_patterns using ctrl signal $flatten\display.$procmux$223_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\decoder.$auto$mem.cc:282:emit$151 ($memrd_v2):
    Found 5 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$246 $auto$opt_reduce.cc:134:opt_pmux$244 $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP \control }.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu_unit.$shr$/openlane/designs/semi_cpu/src/alu.v:14$29 ($shr):
    Found 1 activation_patterns using ctrl signal $flatten\alu_unit.$procmux$210_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\alu_unit.$shl$/openlane/designs/semi_cpu/src/alu.v:13$28 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\alu_unit.$procmux$211_CMP.
    No candidates found.
Removing 22 cells in module semi_cpu:
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$11 ($div).
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$13 ($div).
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$15 ($div).
  Removing cell $auto$share.cc:667:make_supercell$349 ($div).
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$17 ($div).
  Removing cell $auto$share.cc:667:make_supercell$339 ($div).
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$19 ($div).
  Removing cell $flatten\display.$div$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$21 ($div).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:28$8 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$319 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:32$10 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$309 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:36$12 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$299 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:40$14 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$289 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:44$16 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$279 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:48$18 ($mod).
  Removing cell $auto$share.cc:667:make_supercell$269 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:52$20 ($mod).
  Removing cell $flatten\display.$mod$/openlane/designs/semi_cpu/src/seven_segment_display.v:56$22 ($mod).

38. Executing OPT pass (performing simple optimizations).

38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~22 debug messages>

38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
    New ctrl vector for $pmux cell $flatten\display.$procmux$216: { $flatten\display.$procmux$224_CMP $flatten\display.$procmux$223_CMP $flatten\display.$procmux$222_CMP $flatten\display.$procmux$221_CMP $flatten\display.$procmux$220_CMP $flatten\display.$procmux$219_CMP $auto$opt_reduce.cc:134:opt_pmux$373 }
  Optimizing cells in module \semi_cpu.
Performed a total of 2 changes.

38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

38.6. Executing OPT_DFF pass (perform DFF optimizations).

38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 45 unused wires.
<suppressed ~12 debug messages>

38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~2 debug messages>

38.9. Rerunning OPT passes. (Maybe there is more to do..)

38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
    New ctrl vector for $pmux cell $flatten\display.$procmux$216: $auto$opt_reduce.cc:134:opt_pmux$375
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$374: { $auto$share.cc:977:make_cell_activation_logic$272 $auto$share.cc:977:make_cell_activation_logic$282 $flatten\display.$procmux$218_CMP $auto$share.cc:977:make_cell_activation_logic$292 $auto$share.cc:977:make_cell_activation_logic$302 $auto$share.cc:977:make_cell_activation_logic$312 $auto$share.cc:977:make_cell_activation_logic$322 $auto$share.cc:977:make_cell_activation_logic$262 }
  Optimizing cells in module \semi_cpu.
Performed a total of 2 changes.

38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

38.13. Executing OPT_DFF pass (perform DFF optimizations).

38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

38.16. Rerunning OPT passes. (Maybe there is more to do..)

38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

38.20. Executing OPT_DFF pass (perform DFF optimizations).

38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

38.23. Finished OPT passes. (There is nothing left to do.)

39. Executing MEMORY pass.

39.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

39.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

39.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing semi_cpu.rf.registers write port 0.

39.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

39.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150'[0] in module `\semi_cpu': no output FF found.
Checking read port `$flatten\display.$auto$proc_rom.cc:150:do_switch$154'[0] in module `\semi_cpu': no output FF found.
Checking read port `\rf.registers'[0] in module `\semi_cpu': no output FF found.
Checking read port `\rf.registers'[1] in module `\semi_cpu': no output FF found.
Checking read port address `$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150'[0] in module `\semi_cpu': no address FF found.
Checking read port address `$flatten\display.$auto$proc_rom.cc:150:do_switch$154'[0] in module `\semi_cpu': no address FF found.
Checking read port address `\rf.registers'[0] in module `\semi_cpu': no address FF found.
Checking read port address `\rf.registers'[1] in module `\semi_cpu': no address FF found.

39.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

39.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory semi_cpu.rf.registers by address:

39.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

39.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

39.10. Executing MEMORY_COLLECT pass (generating $mem cells).

40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

41. Executing OPT pass (performing simple optimizations).

41.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~8 debug messages>

41.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

41.3. Executing OPT_DFF pass (perform DFF optimizations).

41.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 4 unused cells and 6 unused wires.
<suppressed ~5 debug messages>

41.5. Finished fast OPT passes.

42. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\decoder.$auto$proc_rom.cc:150:do_switch$150 in module \semi_cpu:
  created 8 $dff cells and 0 static cells of width 5.
  read interface: 0 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $flatten\display.$auto$proc_rom.cc:150:do_switch$154 in module \semi_cpu:
  created 16 $dff cells and 0 static cells of width 7.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \rf.registers in module \semi_cpu:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

43. Executing OPT pass (performing simple optimizations).

43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~15 debug messages>

43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~46 debug messages>

43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][3][4]$438:
      Old ports: A=7'0000000, B=7'0010000, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421 [4]
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421 [3:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][3][3]$435:
      Old ports: A=7'0000010, B=7'1111000, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [1] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [6:4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [2] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [0] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][3][2]$432:
      Old ports: A=7'0011001, B=7'0010010, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418
      New ports: A=2'01, B=2'10, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418 [1:0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418 [6:2] = { 3'001 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][3][1]$429:
      Old ports: A=7'0100100, B=7'0110000, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416
      New ports: A=2'01, B=2'10, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [2] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [1:0] } = 5'01000
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][3][0]$426:
      Old ports: A=7'1000000, B=7'1111001, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415
      New ports: A=1'0, B=1'1, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0]
      New connections: $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [6:1] = { 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][2][2]$399:
      Old ports: A=5'01100, B=5'01101, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$a$391
      New ports: A=1'0, B=1'1, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$a$391 [0]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$a$391 [4:1] = 4'0110
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][2][1]$396:
      Old ports: A=5'01010, B=5'01011, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389
      New ports: A=1'0, B=1'1, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389 [0]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389 [4:1] = 4'0101
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$337:
      Old ports: A=24'000011110100001001000000, B=24'100110001001011010000000, Y=$auto$share.cc:658:make_supercell$335
      New ports: A=2'01, B=2'10, Y=$auto$share.cc:658:make_supercell$335 [7:6]
      New connections: { $auto$share.cc:658:make_supercell$335 [23:8] $auto$share.cc:658:make_supercell$335 [5:0] } = { $auto$share.cc:658:make_supercell$335 [7] 2'00 $auto$share.cc:658:make_supercell$335 [7] 1'1 $auto$share.cc:658:make_supercell$335 [6] $auto$share.cc:658:make_supercell$335 [6] $auto$share.cc:658:make_supercell$335 [6] $auto$share.cc:658:make_supercell$335 [7:6] 1'0 $auto$share.cc:658:make_supercell$335 [7] 1'0 $auto$share.cc:658:make_supercell$335 [7] 8'10000000 }
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$367:
      Old ports: A=10'0001100100, B=10'1111101000, Y=$auto$share.cc:658:make_supercell$365
      New ports: A=2'01, B=2'10, Y=$auto$share.cc:658:make_supercell$365 [3:2]
      New connections: { $auto$share.cc:658:make_supercell$365 [9:4] $auto$share.cc:658:make_supercell$365 [1:0] } = { $auto$share.cc:658:make_supercell$365 [3] $auto$share.cc:658:make_supercell$365 [3] $auto$share.cc:658:make_supercell$365 [3] 5'11000 }
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][2][3]$402:
      Old ports: A=5'11110, B=5'11111, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$b$392
      New ports: A=1'0, B=1'1, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$b$392 [0]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$b$392 [4:1] = 4'1111
    Consolidated identical input bits for $mux cell $flatten\decoder.$procmux$178:
      Old ports: A=0, B={ \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18] \decoder.instruction [18:0] }, Y=\immediate
      New ports: A=19'0000000000000000000, B=\decoder.instruction [18:0], Y=\immediate [18:0]
      New connections: \immediate [31:19] = { \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] \immediate [18] }
    Consolidated identical input bits for $pmux cell $flatten\imem.$procmux$160:
      Old ports: A=0, B=192'110010100000000000000000000010101100111100000000000000000000111101011001010100111100000000000000111101001100100000000000000001011100010100000000000000000000001010011110110010010100000000000000, Y=\decoder.instruction
      New ports: A=14'00000000000000, B=84'110101000001101101111000011101010011011000111010011000011100101000001010011101101000, Y={ \decoder.instruction [31:29] \decoder.instruction [27:24] \decoder.instruction [22] \decoder.instruction [19] \decoder.instruction [15:14] \decoder.instruction [3] \decoder.instruction [1:0] }
      New connections: { \decoder.instruction [28] \decoder.instruction [23] \decoder.instruction [21:20] \decoder.instruction [18:16] \decoder.instruction [13:4] \decoder.instruction [2] } = { \decoder.instruction [22] \decoder.instruction [19] 1'0 \decoder.instruction [15] 1'0 \decoder.instruction [15:14] 10'0000000000 \decoder.instruction [0] }
  Optimizing cells in module \semi_cpu.
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$420:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421, B=7'1111111, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412
      New ports: A={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][2]$a$421 [4] 1'0 }, B=2'11, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [3:1] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$417:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410
      New ports: A={ 2'01 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$a$418 [1:0] }, B={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][1]$b$419 [1] 1'0 }, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410 [5:3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410 [1:0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410 [6] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410 [2] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$b$410 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$414:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415, B=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409
      New ports: A={ 1'1 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] 1'0 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$a$415 [0] }, B={ 2'01 $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][2][0]$b$416 [2] 1'0 }, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [6:4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [2] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [3] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [1] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][0]$a$409 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$390:
      Old ports: A=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$a$391, B=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$b$392, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386
      New ports: A={ 1'0 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$a$391 [0] }, B={ 1'1 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$b$392 [0] }, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [1:0]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [4:2] = { $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [1] 2'11 }
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$387:
      Old ports: A=5'00000, B=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$a$385
      New ports: A=2'00, B={ 1'1 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389 [0] }, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$a$385 [1:0]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$a$385 [4:2] = { 1'0 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$a$385 [1] 1'0 }
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$347:
      Old ports: A=$auto$share.cc:658:make_supercell$335, B=24'000000011000011010100000, Y=$auto$share.cc:658:make_supercell$345
      New ports: A={ 1'1 $auto$share.cc:658:make_supercell$335 [6] $auto$share.cc:658:make_supercell$335 [7] $auto$share.cc:658:make_supercell$335 [7:6] 1'0 }, B=6'010101, Y={ $auto$share.cc:658:make_supercell$345 [19] $auto$share.cc:658:make_supercell$345 [16] $auto$share.cc:658:make_supercell$345 [12] $auto$share.cc:658:make_supercell$345 [7:5] }
      New connections: { $auto$share.cc:658:make_supercell$345 [23:20] $auto$share.cc:658:make_supercell$345 [18:17] $auto$share.cc:658:make_supercell$345 [15:13] $auto$share.cc:658:make_supercell$345 [11:8] $auto$share.cc:658:make_supercell$345 [4:0] } = { $auto$share.cc:658:make_supercell$345 [12] 2'00 $auto$share.cc:658:make_supercell$345 [12] $auto$share.cc:658:make_supercell$345 [6] $auto$share.cc:658:make_supercell$345 [6] $auto$share.cc:658:make_supercell$345 [7:6] 2'00 $auto$share.cc:658:make_supercell$345 [7] 7'1000000 }
    Consolidated identical input bits for $mux cell $flatten\decoder.$procmux$178:
      Old ports: A=19'0000000000000000000, B=\decoder.instruction [18:0], Y=\immediate [18:0]
      New ports: A=5'00000, B={ \decoder.instruction [15:14] \decoder.instruction [3] \decoder.instruction [1:0] }, Y={ \immediate [15:14] \immediate [3] \immediate [1:0] }
      New connections: { \immediate [18:16] \immediate [13:4] \immediate [2] } = { 1'0 \immediate [15:14] 10'0000000000 \immediate [0] }
    Consolidated identical input bits for $mux cell $flatten\decoder.$procmux$184:
      Old ports: A=5'00000, B=\decoder.instruction [18:14], Y=\rf.A2
      New ports: A=2'00, B=\decoder.instruction [15:14], Y=\rf.A2 [1:0]
      New connections: \rf.A2 [4:2] = { 1'0 \rf.A2 [1:0] }
    Consolidated identical input bits for $mux cell $flatten\decoder.$procmux$187:
      Old ports: A=5'00000, B=\decoder.instruction [23:19], Y=\rf.A1
      New ports: A=3'000, B={ \decoder.instruction [22] \decoder.instruction [15] \decoder.instruction [19] }, Y={ \rf.A1 [3] \rf.A1 [1:0] }
      New connections: { \rf.A1 [4] \rf.A1 [2] } = { \rf.A1 [0] 1'0 }
  Optimizing cells in module \semi_cpu.
    Consolidated identical input bits for $mux cell $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$411:
      Old ports: A=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412, B=7'1111111, Y=$memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407
      New ports: A={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][1][1]$a$412 [0] }, B=2'11, Y={ $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [4] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] }
      New connections: { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [6:5] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [3:1] } = { $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] $memory$flatten\display.$auto$proc_rom.cc:150:do_switch$154$rdmux[0][0][0]$b$407 [0] }
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$357:
      Old ports: A=$auto$share.cc:658:make_supercell$345, B=24'000000000010011100010000, Y=$auto$share.cc:658:make_supercell$355
      New ports: A={ $auto$share.cc:658:make_supercell$345 [19] $auto$share.cc:658:make_supercell$345 [16] $auto$share.cc:658:make_supercell$345 [12] $auto$share.cc:658:make_supercell$345 [7] $auto$share.cc:658:make_supercell$345 [7:5] 1'0 }, B=8'00010001, Y={ $auto$share.cc:658:make_supercell$355 [19] $auto$share.cc:658:make_supercell$355 [16] $auto$share.cc:658:make_supercell$355 [12] $auto$share.cc:658:make_supercell$355 [10] $auto$share.cc:658:make_supercell$355 [7:4] }
      New connections: { $auto$share.cc:658:make_supercell$355 [23:20] $auto$share.cc:658:make_supercell$355 [18:17] $auto$share.cc:658:make_supercell$355 [15:13] $auto$share.cc:658:make_supercell$355 [11] $auto$share.cc:658:make_supercell$355 [9:8] $auto$share.cc:658:make_supercell$355 [3:0] } = { $auto$share.cc:658:make_supercell$355 [12] 2'00 $auto$share.cc:658:make_supercell$355 [12] $auto$share.cc:658:make_supercell$355 [6] $auto$share.cc:658:make_supercell$355 [6] $auto$share.cc:658:make_supercell$355 [7:6] $auto$share.cc:658:make_supercell$355 [4] 2'01 $auto$share.cc:658:make_supercell$355 [4] 4'0000 }
  Optimizing cells in module \semi_cpu.
Performed a total of 23 changes.

43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

43.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\alu_unit.$procmux$207 in front of them:
        $auto$alumacc.cc:485:replace_alu$253
        $auto$alumacc.cc:485:replace_alu$250

43.7. Executing OPT_DFF pass (perform DFF optimizations).

43.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 141 unused wires.
<suppressed ~1 debug messages>

43.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~10 debug messages>

43.10. Rerunning OPT passes. (Maybe there is more to do..)

43.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][1][1]$520.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][1][1]$520.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][2][2]$529.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][2][2]$529.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][2][3]$532.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][2][3]$532.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][0]$535.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][1]$538.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][2]$541.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][3]$544.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][4]$547.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][4]$547.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][5]$550.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][5]$550.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][6]$553.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][6]$553.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][3][7]$556.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][3][7]$556.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][0]$559.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][10]$589.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][10]$589.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][11]$592.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][11]$592.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][12]$595.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][12]$595.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][13]$598.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][13]$598.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][14]$601.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][14]$601.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][15]$604.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][15]$604.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][1]$562.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][1]$562.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][2]$565.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][3]$568.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][3]$568.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][4]$571.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][4]$571.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][5]$574.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][6]$577.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][6]$577.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][7]$580.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][8]$583.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][8]$583.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[0][4][9]$586.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[0][4][9]$586.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][3][1]$631.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][3][1]$631.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][3][3]$637.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][3][3]$637.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][3][5]$643.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][3][5]$643.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][3][7]$649.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][3][7]$649.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][0]$652.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][10]$682.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][10]$682.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][11]$685.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][11]$685.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][12]$688.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][13]$691.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][14]$694.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][14]$694.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][15]$697.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][15]$697.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][1]$655.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][2]$658.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][2]$658.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][3]$661.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][3]$661.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][4]$664.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][5]$667.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][6]$670.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][6]$670.
    dead port 1/2 on $mux $memory\rf.registers$rdmux[1][4][7]$673.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][7]$673.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][8]$676.
    dead port 2/2 on $mux $memory\rf.registers$rdmux[1][4][9]$679.
Removed 78 multiplexer ports.
<suppressed ~48 debug messages>

43.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
    New ctrl vector for $pmux cell $flatten\alu_unit.$procmux$207: { $flatten\alu_unit.$procmux$211_CMP $flatten\alu_unit.$procmux$210_CMP $auto$opt_reduce.cc:134:opt_pmux$952 }
    Consolidated identical input bits for $mux cell $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][1]$390:
      Old ports: A={ 1'0 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389 [0] }, B={ 1'1 $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][1][0]$b$389 [0] }, Y={ $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [4] $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [0] }
      New ports: A=1'0, B=1'1, Y=$memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [4]
      New connections: $memory$flatten\decoder.$auto$proc_rom.cc:150:do_switch$150$rdmux[0][0][0]$b$386 [0] = \decoder.instruction [29]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$951: { $flatten\alu_unit.$procmux$213_CMP $flatten\alu_unit.$procmux$212_CMP $flatten\alu_unit.$procmux$209_CMP $flatten\alu_unit.$procmux$208_CMP }
  Optimizing cells in module \semi_cpu.
Performed a total of 3 changes.

43.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

43.14. Executing OPT_SHARE pass.

43.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\rf.registers[9]$468 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[9]).
Adding EN signal on $memory\rf.registers[8]$466 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[8]).
Adding EN signal on $memory\rf.registers[7]$464 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[7]).
Adding EN signal on $memory\rf.registers[6]$462 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[6]).
Adding EN signal on $memory\rf.registers[5]$460 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[5]).
Adding EN signal on $memory\rf.registers[4]$458 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[4]).
Adding EN signal on $memory\rf.registers[3]$456 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[3]).
Adding EN signal on $memory\rf.registers[31]$512 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[31]).
Adding EN signal on $memory\rf.registers[30]$510 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[30]).
Adding EN signal on $memory\rf.registers[2]$454 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[2]).
Adding EN signal on $memory\rf.registers[29]$508 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[29]).
Adding EN signal on $memory\rf.registers[28]$506 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[28]).
Adding EN signal on $memory\rf.registers[27]$504 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[27]).
Adding EN signal on $memory\rf.registers[26]$502 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[26]).
Adding EN signal on $memory\rf.registers[25]$500 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[25]).
Adding EN signal on $memory\rf.registers[24]$498 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[24]).
Adding EN signal on $memory\rf.registers[23]$496 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[23]).
Adding EN signal on $memory\rf.registers[22]$494 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[22]).
Adding EN signal on $memory\rf.registers[21]$492 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[21]).
Adding EN signal on $memory\rf.registers[20]$490 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[20]).
Adding EN signal on $memory\rf.registers[1]$452 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[1]).
Adding EN signal on $memory\rf.registers[19]$488 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[19]).
Adding EN signal on $memory\rf.registers[18]$486 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[18]).
Adding EN signal on $memory\rf.registers[17]$484 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[17]).
Adding EN signal on $memory\rf.registers[16]$482 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[16]).
Adding EN signal on $memory\rf.registers[15]$480 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[15]).
Adding EN signal on $memory\rf.registers[14]$478 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[14]).
Adding EN signal on $memory\rf.registers[13]$476 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[13]).
Adding EN signal on $memory\rf.registers[12]$474 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[12]).
Adding EN signal on $memory\rf.registers[11]$472 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[11]).
Adding EN signal on $memory\rf.registers[10]$470 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[10]).
Adding EN signal on $memory\rf.registers[0]$450 ($dff) from module semi_cpu (D = \rf.WD3, Q = \rf.registers[0]).

43.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 101 unused cells and 155 unused wires.
<suppressed ~124 debug messages>

43.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~1 debug messages>

43.18. Rerunning OPT passes. (Maybe there is more to do..)

43.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

43.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

43.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

43.22. Executing OPT_SHARE pass.

43.23. Executing OPT_DFF pass (perform DFF optimizations).

43.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

43.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

43.26. Rerunning OPT passes. (Maybe there is more to do..)

43.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

43.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

43.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

43.30. Executing OPT_SHARE pass.

43.31. Executing OPT_DFF pass (perform DFF optimizations).

43.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

43.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

43.34. Finished OPT passes. (There is nothing left to do.)

44. Executing TECHMAP pass (map to technology primitives).

44.1. Executing Verilog-2005 frontend: /nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nix/store/sx2v0i73mn1ih2z1nk61pm9n5gjgpidy-yosys/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

44.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$661999b8ebc8b4b81aa840f2824545b2035f8a4b\_90_pmux for cells of type $pmux.
Using template $paramod$d566760d838ee30f101ec7ab5e06e191341e6c49\_90_div for cells of type $div.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$bf20f0d9d6970e76e8696adf2070a12d95a8945b\_90_div for cells of type $div.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\_90_mod for cells of type $mod.
Running "alumacc" on wrapper $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:A_SIGNED=0:A_WIDTH=32:Y_WIDTH=32:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\_90_div for cells of type $div.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$d566760d838ee30f101ec7ab5e06e191341e6c49\$__div_mod_trunc for cells of type $__div_mod_trunc.
Using template $paramod$bf20f0d9d6970e76e8696adf2070a12d95a8945b\$__div_mod_trunc for cells of type $__div_mod_trunc.
Using template $paramod$86918417b1d705351097c6e77e8f74c668cf6343\$__div_mod_trunc for cells of type $__div_mod_trunc.
Using template $paramod$c6baa65225090ac0a120feab1b920965244aa496\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Running "alumacc" on wrapper $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$neg:Y_WIDTH=32:A_WIDTH=32:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\$__div_mod_u\WIDTH=32'00000000000000000000000000100000 for cells of type $__div_mod_u.
Using extmapper simplemap for cells of type $or.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=32:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=32:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=33:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=33:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=34:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=34:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=35:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=35:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=36:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=36:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=37:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=37:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=38:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=38:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=39:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=39:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=40:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=40:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=41:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=41:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=42:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=42:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=43:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=43:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=44:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=44:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=45:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=45:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=46:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=46:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=47:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=47:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=48:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=48:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=49:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=49:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=50:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=50:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=51:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=51:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=52:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=52:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=53:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=53:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=54:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=54:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=55:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=55:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=56:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=56:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=57:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=57:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=58:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=58:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=59:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=59:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=60:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=60:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=61:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=61:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=62:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=62:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:Y_WIDTH=63:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Running "alumacc" on wrapper $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$ge:Y_WIDTH=1:B_WIDTH=63:A_WIDTH=32:B_SIGNED=0:A_SIGNED=0:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$789c344356a154d2afc7b832b41d1067dbc946ba\_90_alu for cells of type $alu.
Using template $paramod$e39069e3f4ee35c1eea86993bd74689959babaab\_90_alu for cells of type $alu.
Using template $paramod$d7aca3dc44b07ff19908fb1a3b606577588c15f1\_90_alu for cells of type $alu.
Using template $paramod$f9e3a3c4b84f99cb56fad07743ec44ad55b11c8b\_90_alu for cells of type $alu.
Using template $paramod$dd5ba471f7dcf35707f23b88cfd15b9582f97277\_90_alu for cells of type $alu.
Using template $paramod$b7531bc0616f8d4cdd8159edd2237c9ddbb2ce01\_90_alu for cells of type $alu.
Using template $paramod$ff8ba121d2f8e85b775c9f35ef677a1a276e7e1b\_90_alu for cells of type $alu.
Using template $paramod$9a66d4bebbc4fab84566caffef9f094a1a467389\_90_alu for cells of type $alu.
Using template $paramod$57bc309a5d8a948cec8981d26d896ee1cbf54d58\_90_alu for cells of type $alu.
Using template $paramod$f94cfdb8ad389f4fc4515bcb65bccd7e2d189e95\_90_alu for cells of type $alu.
Using template $paramod$2a25669ccd39fe7c0fbfb2a4d17416fc78667f00\_90_alu for cells of type $alu.
Using template $paramod$d9397dfdf5f7cf5715aebc9527845402880218a0\_90_alu for cells of type $alu.
Using template $paramod$acc477ace2583cc2ee0cf651c72a385d2bbbe9f1\_90_alu for cells of type $alu.
Using template $paramod$415abdcadc251df4f0f033b62b8f3296b8461b4e\_90_alu for cells of type $alu.
Using template $paramod$6573c1c269218f299badf6e04ca86aa37fdb352c\_90_alu for cells of type $alu.
Using template $paramod$6a21b72c9c0b32e81b169c7e08a4d8b9c462448f\_90_alu for cells of type $alu.
Using template $paramod$324e0706ebb77f1915b22f4a136962ec3fd1d7ff\_90_alu for cells of type $alu.
Using template $paramod$461fc931d630cb01bec1fea87f37fbcc53f6f6a4\_90_alu for cells of type $alu.
Using template $paramod$fe074227b1c5fbaa1ea56076182c29dbcf3a782a\_90_alu for cells of type $alu.
Using template $paramod$85502450775e62e9c6a2fe29020b3433d4335647\_90_alu for cells of type $alu.
Using template $paramod$e32c921f95fe0e2350204f4ecefc9e296355521b\_90_alu for cells of type $alu.
Using template $paramod$05d913fba320393c7e943e625bef3af776153b60\_90_alu for cells of type $alu.
Using template $paramod$8e07e2c0a3efc148d2f3714f3901076678774ed1\_90_alu for cells of type $alu.
Using template $paramod$5b7e592b3c2951af6800b7fd597f66a79b72b91c\_90_alu for cells of type $alu.
Using template $paramod$90182783100594e2dd636a282c4723cfc9adaedd\_90_alu for cells of type $alu.
Using template $paramod$851c5c9b30913ea2deae68e3ca9e9c4e649723bc\_90_alu for cells of type $alu.
Using template $paramod$1445aacdb5f2a1ef9fedf1373097ffa45438211d\_90_alu for cells of type $alu.
Using template $paramod$7add42b712fe5bbbba521e93062103d6bf78a453\_90_alu for cells of type $alu.
Using template $paramod$b6f86f6a0c43c26b22ee55f51e05d5951f0e6562\_90_alu for cells of type $alu.
Using template $paramod$044fdceace8c449ec99f900b42120ac005ff4065\_90_alu for cells of type $alu.
Using template $paramod$b6b58933bcf3c8b9e3e5de18c2637bd0e12c7c47\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000101111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000110111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000111111 for cells of type $lcu.
No more expansions possible.
<suppressed ~68593 debug messages>

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~81600 debug messages>

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
<suppressed ~115638 debug messages>
Removed a total of 38546 cells.

45.3. Executing OPT_DFF pass (perform DFF optimizations).

45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 2835 unused cells and 57727 unused wires.
<suppressed ~2836 debug messages>

45.5. Finished fast OPT passes.

46. Executing ABC pass (technology mapping using ABC).

46.1. Extracting gate netlist of module `\semi_cpu' to `<abc-temp-dir>/input.blif'..
Extracted 24636 gates and 25016 wires to a netlist network with 378 inputs and 83 outputs.

46.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

46.1.2. Re-integrating ABC results.
ABC RESULTS:              XNOR cells:     1020
ABC RESULTS:               MUX cells:     3769
ABC RESULTS:               NOT cells:     1268
ABC RESULTS:               NOR cells:     1668
ABC RESULTS:             ORNOT cells:      998
ABC RESULTS:                OR cells:     1451
ABC RESULTS:               AND cells:      490
ABC RESULTS:              NAND cells:      381
ABC RESULTS:            ANDNOT cells:     7591
ABC RESULTS:               XOR cells:     2393
ABC RESULTS:        internal signals:    24555
ABC RESULTS:           input signals:      378
ABC RESULTS:          output signals:       83
Removing temp directory.

47. Executing OPT pass (performing simple optimizations).

47.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~92 debug messages>

47.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
<suppressed ~1494 debug messages>
Removed a total of 498 cells.

47.3. Executing OPT_DFF pass (perform DFF optimizations).

47.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 1 unused cells and 10038 unused wires.
<suppressed ~8 debug messages>

47.5. Finished fast OPT passes.

48. Executing HIERARCHY pass (managing design hierarchy).

48.1. Analyzing design hierarchy..
Top module:  \semi_cpu

48.2. Analyzing design hierarchy..
Top module:  \semi_cpu
Removed 0 unused modules.

49. Printing statistics.

=== semi_cpu ===

   Number of wires:              20525
   Number of wire bits:          21510
   Number of public wires:          64
   Number of public wire bits:    1003
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              20907
     $_ANDNOT_                    7231
     $_AND_                        384
     $_DFFE_PP0P_                   37
     $_DFFE_PP_                    320
     $_DFF_P_                       20
     $_MUX_                       3767
     $_NAND_                       375
     $_NOR_                       1653
     $_NOT_                       1267
     $_ORNOT_                      998
     $_OR_                        1443
     $_XNOR_                      1020
     $_XOR_                       2392

50. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu...
Found and reported 0 problems.

51. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/post_techmap.dot'.
Dumping module semi_cpu to page 1.

52. Executing SHARE pass (SAT-based resource sharing).

53. Executing OPT pass (performing simple optimizations).

53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.
<suppressed ~1 debug messages>

53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

53.6. Executing OPT_DFF pass (perform DFF optimizations).

53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

53.9. Rerunning OPT passes. (Maybe there is more to do..)

53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \semi_cpu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \semi_cpu.
Performed a total of 0 changes.

53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\semi_cpu'.
Removed a total of 0 cells.

53.13. Executing OPT_DFF pass (perform DFF optimizations).

53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..

53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module semi_cpu.

53.16. Finished OPT passes. (There is nothing left to do.)

54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 0 unused cells and 44 unused wires.
<suppressed ~44 debug messages>

55. Printing statistics.

=== semi_cpu ===

   Number of wires:              20480
   Number of wire bits:          20934
   Number of public wires:          20
   Number of public wire bits:     428
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              20906
     $_ANDNOT_                    7231
     $_AND_                        384
     $_DFFE_PP0P_                   37
     $_DFFE_PP_                    320
     $_DFF_P_                       20
     $_MUX_                       3766
     $_NAND_                       375
     $_NOR_                       1653
     $_NOT_                       1267
     $_ORNOT_                      998
     $_OR_                        1443
     $_XNOR_                      1020
     $_XOR_                       2392

mapping tbuf

56. Executing TECHMAP pass (map to technology primitives).

56.1. Executing Verilog-2005 frontend: /home/betulcagril/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/betulcagril/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

56.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

57. Executing SIMPLEMAP pass (map simple cells to gate primitives).

58. Executing TECHMAP pass (map to technology primitives).

58.1. Executing Verilog-2005 frontend: /home/betulcagril/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/betulcagril/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

58.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

59. Executing SIMPLEMAP pass (map simple cells to gate primitives).

60. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

60.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\semi_cpu':
  mapped 37 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 340 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

61. Printing statistics.

=== semi_cpu ===

   Number of wires:              20874
   Number of wire bits:          21328
   Number of public wires:          20
   Number of public wire bits:     428
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              21300
     $_ANDNOT_                    7231
     $_AND_                        384
     $_MUX_                       4123
     $_NAND_                       375
     $_NOR_                       1653
     $_NOT_                       1304
     $_ORNOT_                      998
     $_OR_                        1443
     $_XNOR_                      1020
     $_XOR_                       2392
     sky130_fd_sc_hd__dfrtp_2       37
     sky130_fd_sc_hd__dfxtp_2      340

[INFO]: USING STRATEGY AREA 0

62. Executing ABC pass (technology mapping using ABC).

62.1. Extracting gate netlist of module `\semi_cpu' to `/tmp/yosys-abc-1d06l5/input.blif'..
Extracted 20923 gates and 21302 wires to a netlist network with 379 inputs and 429 outputs.

62.1.1. Executing ABC.
Running ABC command: "/nix/store/wq2q0njg3sx8wvj2akz7x1qxwyrv9xlr-yosys-abc/bin/abc" -s -f /tmp/yosys-abc-1d06l5/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-1d06l5/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-1d06l5/input.blif 
ABC: + read_lib -w /openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.03 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.04 sec
ABC: Memory =    9.54 MB. Time =     0.04 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/semi_cpu/runs/lab5_final/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: Abc_NtkFastExtract: Nodes have duplicated fanins. FX is not performed.
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000.0 
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   4733 ( 19.6 %)   Cap = 10.1 ff (  6.3 %)   Area =    40456.30 ( 77.9 %)   Delay = 39602.62 ps  ( 12.3 %)               
ABC: Path  0 --      39 : 0    9 pi                        A =   0.00  Df =  87.8  -47.6 ps  S = 129.5 ps  Cin =  0.0 ff  Cout =  27.1 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    1470 : 2    1 sky130_fd_sc_hd__and2b_2  A =   8.76  Df = 238.1  -11.0 ps  S =  34.7 ps  Cin =  1.6 ff  Cout =   2.5 ff  Cmax = 310.4 ff  G =  151  
ABC: Path  2 --    1471 : 1    8 sky130_fd_sc_hd__buf_4    A =   7.51  Df = 376.6   -7.3 ps  S =  76.1 ps  Cin =  2.4 ff  Cout =  23.2 ff  Cmax = 561.2 ff  G =  923  
ABC: Path  3 --    1481 : 3    2 sky130_fd_sc_hd__or3_4    A =  11.26  Df = 695.5 -210.5 ps  S =  63.8 ps  Cin =  2.4 ff  Cout =   4.0 ff  Cmax = 531.9 ff  G =  164  
ABC: Path  4 --    1485 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df = 913.3 -289.1 ps  S =  74.9 ps  Cin =  2.4 ff  Cout =  12.6 ff  Cmax = 309.5 ff  G =  510  
ABC: Path  5 --    1487 : 5    2 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =1270.4 -501.4 ps  S =  56.5 ps  Cin =  2.3 ff  Cout =   3.9 ff  Cmax = 299.4 ff  G =  164  
ABC: Path  6 --    1492 : 4    3 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =1485.3 -559.9 ps  S =  66.4 ps  Cin =  2.4 ff  Cout =   8.2 ff  Cmax = 271.9 ff  G =  330  
ABC: Path  7 --    1495 : 4    9 sky130_fd_sc_hd__o211a_4  A =  17.52  Df =1775.9 -622.3 ps  S = 121.8 ps  Cin =  4.7 ff  Cout =  34.1 ff  Cmax = 509.0 ff  G =  702  
ABC: Path  8 --    1514 : 3    3 sky130_fd_sc_hd__mux2_4   A =  15.01  Df =2089.3 -698.8 ps  S =  57.1 ps  Cin =  3.2 ff  Cout =   8.2 ff  Cmax = 536.5 ff  G =  241  
ABC: Path  9 --    1515 : 2    3 sky130_fd_sc_hd__and2_2   A =   7.51  Df =2296.8 -747.5 ps  S =  71.0 ps  Cin =  1.5 ff  Cout =   9.6 ff  Cmax = 303.0 ff  G =  618  
ABC: Path 10 --    1532 : 5    2 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =2696.4  -96.7 ps  S =  59.5 ps  Cin =  2.3 ff  Cout =   4.9 ff  Cmax = 299.4 ff  G =  203  
ABC: Path 11 --    1536 : 3    4 sky130_fd_sc_hd__and3_4   A =  11.26  Df =2877.0 -102.7 ps  S =  55.2 ps  Cin =  2.4 ff  Cout =   8.2 ff  Cmax = 532.8 ff  G =  318  
ABC: Path 12 --    1546 : 4    3 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =3108.1  -76.0 ps  S =  66.4 ps  Cin =  2.3 ff  Cout =   8.8 ff  Cmax = 285.7 ff  G =  352  
ABC: Path 13 --    1548 : 5    1 sky130_fd_sc_hd__o32a_2   A =  11.26  Df =3457.2 -265.1 ps  S =  70.8 ps  Cin =  2.3 ff  Cout =   9.7 ff  Cmax = 300.3 ff  G =  401  
ABC: Path 14 --    1550 : 3    6 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =3667.7 -403.6 ps  S = 182.5 ps  Cin =  8.8 ff  Cout =  18.8 ff  Cmax = 221.6 ff  G =  200  
ABC: Path 15 --    1566 : 3    2 sky130_fd_sc_hd__or3_2    A =   7.51  Df =3827.1 -133.9 ps  S =  91.5 ps  Cin =  1.5 ff  Cout =   7.0 ff  Cmax = 310.4 ff  G =  446  
ABC: Path 16 --    1571 : 5    2 sky130_fd_sc_hd__a32o_2   A =  11.26  Df =4039.5   -5.5 ps  S = 101.4 ps  Cin =  2.3 ff  Cout =  13.5 ff  Cmax = 264.6 ff  G =  556  
ABC: Path 17 --    1576 : 3    3 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =4399.0 -271.7 ps  S = 216.9 ps  Cin =  4.6 ff  Cout =  15.7 ff  Cmax = 128.2 ff  G =  327  
ABC: Path 18 --    1578 : 5    2 sky130_fd_sc_hd__o221a_2  A =  11.26  Df =4623.6 -262.7 ps  S =  50.8 ps  Cin =  2.3 ff  Cout =   4.2 ff  Cmax = 281.1 ff  G =  167  
ABC: Path 19 --    1585 : 5    3 sky130_fd_sc_hd__o41a_2   A =  12.51  Df =4859.1  -69.2 ps  S =  88.5 ps  Cin =  2.4 ff  Cout =  11.4 ff  Cmax = 305.8 ff  G =  472  
ABC: Path 20 --    1595 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =5071.7 -147.6 ps  S =  51.3 ps  Cin =  2.4 ff  Cout =   7.3 ff  Cmax = 309.5 ff  G =  299  
ABC: Path 21 --    1603 : 5    1 sky130_fd_sc_hd__a311o_2  A =  11.26  Df =5451.6 -338.9 ps  S =  73.1 ps  Cin =  2.3 ff  Cout =   9.7 ff  Cmax = 298.5 ff  G =  403  
ABC: Path 22 --    1604 : 3    4 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =5666.9 -477.8 ps  S = 188.2 ps  Cin =  8.8 ff  Cout =  19.7 ff  Cmax = 221.6 ff  G =  216  
ABC: Path 23 --    1632 : 3    3 sky130_fd_sc_hd__mux2_4   A =  15.01  Df =5953.8 -425.8 ps  S =  79.6 ps  Cin =  3.2 ff  Cout =  19.6 ff  Cmax = 536.5 ff  G =  584  
ABC: Path 24 --    1680 : 3    6 sky130_fd_sc_hd__o21ai_4  A =  16.27  Df =8236.4 -166.1 ps  S = 228.5 ps  Cin =  8.8 ff  Cout =  25.2 ff  Cmax = 224.3 ff  G =  275  
ABC: Path 25 --    1803 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =9987.6 -289.4 ps  S =  45.2 ps  Cin =  2.4 ff  Cout =   2.4 ff  Cmax = 325.0 ff  G =   99  
ABC: Path 26 --    1806 : 4    2 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =10248.0  -22.6 ps  S =  60.6 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 271.9 ff  G =  287  
ABC: Path 27 --    1807 : 4    1 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =10416.3  -33.9 ps  S =  36.7 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 271.9 ff  G =   98  
ABC: Path 28 --    1808 : 4    4 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =10646.0 -132.3 ps  S =  80.2 ps  Cin =  2.4 ff  Cout =  10.9 ff  Cmax = 271.9 ff  G =  437  
ABC: Path 29 --    1827 : 4    4 sky130_fd_sc_hd__o31a_4   A =  17.52  Df =11001.0 -174.4 ps  S =  69.1 ps  Cin =  4.5 ff  Cout =  17.5 ff  Cmax = 544.7 ff  G =  374  
ABC: Path 30 --    1869 : 3    5 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =11231.7 -236.3 ps  S =  98.1 ps  Cin =  2.4 ff  Cout =  17.5 ff  Cmax = 309.5 ff  G =  709  
ABC: Path 31 --    1873 : 3    2 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =11446.8 -319.6 ps  S =  37.0 ps  Cin =  2.4 ff  Cout =   3.9 ff  Cmax = 309.5 ff  G =  161  
ABC: Path 32 --    1876 : 5    4 sky130_fd_sc_hd__a32o_2   A =  11.26  Df =11742.3 -206.7 ps  S = 121.7 ps  Cin =  2.3 ff  Cout =  17.4 ff  Cmax = 264.6 ff  G =  712  
ABC: Path 33 --    1881 : 4    2 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =11998.5 -204.0 ps  S =  66.1 ps  Cin =  2.4 ff  Cout =   7.2 ff  Cmax = 268.3 ff  G =  287  
ABC: Path 34 --    1907 : 4    2 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =12339.4 -286.9 ps  S =  69.7 ps  Cin =  2.3 ff  Cout =   9.5 ff  Cmax = 285.7 ff  G =  378  
ABC: Path 35 --    1910 : 4    3 sky130_fd_sc_hd__o211a_4  A =  17.52  Df =12580.6 -362.1 ps  S =  56.9 ps  Cin =  4.7 ff  Cout =  11.0 ff  Cmax = 509.0 ff  G =  218  
ABC: Path 36 --    1926 : 5    2 sky130_fd_sc_hd__o311a_4  A =  21.27  Df =12885.7 -506.6 ps  S =  54.9 ps  Cin =  4.4 ff  Cout =   7.4 ff  Cmax = 539.3 ff  G =  155  
ABC: Path 37 --    1929 : 4    1 sky130_fd_sc_hd__or4_4    A =  11.26  Df =13349.8 -865.2 ps  S =  77.7 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 534.7 ff  G =   99  
ABC: Path 38 --    1930 : 4    2 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =13635.5 -960.9 ps  S =  98.8 ps  Cin =  2.4 ff  Cout =  14.4 ff  Cmax = 271.9 ff  G =  580  
ABC: Path 39 --    1932 : 3   10 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =13933.1-1150.4 ps  S = 306.0 ps  Cin =  8.8 ff  Cout =  38.3 ff  Cmax = 221.6 ff  G =  417  
ABC: Path 40 --    1940 : 3    3 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =14289.6-1136.8 ps  S =  81.9 ps  Cin =  2.3 ff  Cout =  11.9 ff  Cmax = 297.6 ff  G =  509  
ABC: Path 41 --    1941 : 2    4 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =14466.9-1079.3 ps  S = 259.0 ps  Cin =  8.5 ff  Cout =  16.6 ff  Cmax = 121.8 ff  G =  189  
ABC: Path 42 --    2031 : 3    1 sky130_fd_sc_hd__and3_2   A =   7.51  Df =14672.9 -758.1 ps  S =  42.9 ps  Cin =  1.5 ff  Cout =   2.5 ff  Cmax = 309.5 ff  G =  158  
ABC: Path 43 --    2034 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =14971.3 -390.4 ps  S =  59.0 ps  Cin =  2.4 ff  Cout =   7.2 ff  Cmax = 325.0 ff  G =  288  
ABC: Path 44 --    2035 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =15324.4 -524.7 ps  S =  65.5 ps  Cin =  2.4 ff  Cout =   9.7 ff  Cmax = 325.0 ff  G =  392  
ABC: Path 45 --    2036 : 3    3 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =15525.4 -656.7 ps  S = 172.3 ps  Cin =  8.8 ff  Cout =  17.2 ff  Cmax = 221.6 ff  G =  186  
ABC: Path 46 --    2037 : 3    9 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =15680.4  -31.7 ps  S = 290.6 ps  Cin =  8.8 ff  Cout =  35.9 ff  Cmax = 221.6 ff  G =  389  
ABC: Path 47 --    2068 : 3    6 sky130_fd_sc_hd__mux2_4   A =  15.01  Df =15993.9   -5.3 ps  S =  71.7 ps  Cin =  3.2 ff  Cout =  16.5 ff  Cmax = 536.5 ff  G =  485  
ABC: Path 48 --    2069 : 2    4 sky130_fd_sc_hd__and2_4   A =   8.76  Df =16166.7  -10.2 ps  S =  61.8 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 539.3 ff  G =  571  
ABC: Path 49 --    2081 : 3    4 sky130_fd_sc_hd__or3b_4   A =  11.26  Df =16564.8 -206.3 ps  S =  75.6 ps  Cin =  2.1 ff  Cout =   9.2 ff  Cmax = 469.7 ff  G =  421  
ABC: Path 50 --    2102 : 5    4 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =17033.4 -430.6 ps  S =  95.7 ps  Cin =  2.4 ff  Cout =  14.5 ff  Cmax = 324.1 ff  G =  574  
ABC: Path 51 --    2141 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =17290.4 -421.4 ps  S =  80.9 ps  Cin =  2.4 ff  Cout =  13.8 ff  Cmax = 309.5 ff  G =  564  
ABC: Path 52 --    2150 : 3    9 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =17534.4 -513.9 ps  S = 260.0 ps  Cin =  8.8 ff  Cout =  31.0 ff  Cmax = 221.6 ff  G =  338  
ABC: Path 53 --    2228 : 3    3 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =17886.0 -487.0 ps  S =  94.8 ps  Cin =  2.3 ff  Cout =  14.6 ff  Cmax = 297.6 ff  G =  626  
ABC: Path 54 --    2229 : 2    3 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =18058.4 -448.7 ps  S = 223.0 ps  Cin =  8.5 ff  Cout =  13.4 ff  Cmax = 121.8 ff  G =  151  
ABC: Path 55 --    2233 : 4    6 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =18454.6 -266.4 ps  S = 112.5 ps  Cin =  2.4 ff  Cout =  21.3 ff  Cmax = 325.0 ff  G =  867  
ABC: Path 56 --    2237 : 4    2 sky130_fd_sc_hd__or4_4    A =  11.26  Df =18938.4 -461.1 ps  S =  81.7 ps  Cin =  2.4 ff  Cout =   4.1 ff  Cmax = 534.7 ff  G =  163  
ABC: Path 57 --    2254 : 4    1 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =19187.1 -572.6 ps  S =  36.6 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 271.9 ff  G =  101  
ABC: Path 58 --    2261 : 3    2 sky130_fd_sc_hd__and3_4   A =  11.26  Df =19349.1 -561.7 ps  S =  51.1 ps  Cin =  2.4 ff  Cout =   6.6 ff  Cmax = 532.8 ff  G =  262  
ABC: Path 59 --    2266 : 3    2 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =19496.0 -651.5 ps  S = 121.2 ps  Cin =  4.6 ff  Cout =   6.6 ff  Cmax = 128.2 ff  G =  138  
ABC: Path 60 --    2271 : 3    5 sky130_fd_sc_hd__o21a_4   A =  15.01  Df =19668.7 -594.9 ps  S =  73.6 ps  Cin =  4.6 ff  Cout =  19.1 ff  Cmax = 510.0 ff  G =  399  
ABC: Path 61 --    2336 : 3    2 sky130_fd_sc_hd__and3_2   A =   7.51  Df =19877.0 -585.9 ps  S =  81.2 ps  Cin =  1.5 ff  Cout =  11.0 ff  Cmax = 309.5 ff  G =  712  
ABC: Path 62 --    2337 : 2    4 sky130_fd_sc_hd__xor2_2   A =  16.27  Df =20116.3 -651.7 ps  S = 246.6 ps  Cin =  8.6 ff  Cout =  16.9 ff  Cmax = 130.0 ff  G =  189  
ABC: Path 63 --    2338 : 2    2 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =20341.8 -678.4 ps  S = 202.6 ps  Cin =  8.5 ff  Cout =  11.7 ff  Cmax = 121.8 ff  G =  131  
ABC: Path 64 --    2342 : 4    1 sky130_fd_sc_hd__or4b_4   A =  13.76  Df =20817.0 -443.3 ps  S =  77.9 ps  Cin =  2.2 ff  Cout =   2.5 ff  Cmax = 533.8 ff  G =  107  
ABC: Path 65 --    2343 : 3    3 sky130_fd_sc_hd__o21bai_4 A =  18.77  Df =21008.5 -248.6 ps  S = 134.2 ps  Cin =  6.6 ff  Cout =  11.7 ff  Cmax = 245.4 ff  G =  171  
ABC: Path 66 --    2362 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =21324.2 -365.8 ps  S =  64.9 ps  Cin =  2.4 ff  Cout =   9.2 ff  Cmax = 325.0 ff  G =  376  
ABC: Path 67 --    2368 : 3    4 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =21541.7 -456.1 ps  S =  52.7 ps  Cin =  4.5 ff  Cout =  13.6 ff  Cmax = 568.6 ff  G =  290  
ABC: Path 68 --    2381 : 5    2 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =22030.7 -790.7 ps  S =  84.9 ps  Cin =  2.4 ff  Cout =  10.4 ff  Cmax = 324.1 ff  G =  417  
ABC: Path 69 --    2384 : 3    9 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =22282.3 -957.5 ps  S = 256.8 ps  Cin =  8.8 ff  Cout =  30.5 ff  Cmax = 221.6 ff  G =  332  
ABC: Path 70 --    2385 : 1   10 sky130_fd_sc_hd__buf_8    A =  15.01  Df =22462.6 -978.1 ps  S =  85.5 ps  Cin =  7.0 ff  Cout =  45.1 ff  Cmax =5000.0 ff  G =  616  
ABC: Path 71 --    2457 : 3    3 sky130_fd_sc_hd__nand3_2  A =  10.01  Df =22564.3 -989.7 ps  S =  86.9 ps  Cin =  4.4 ff  Cout =  10.7 ff  Cmax = 260.0 ff  G =  233  
ABC: Path 72 --    2468 : 3    4 sky130_fd_sc_hd__and3_2   A =   7.51  Df =22805.1  -98.3 ps  S =  96.7 ps  Cin =  1.5 ff  Cout =  14.5 ff  Cmax = 309.5 ff  G =  910  
ABC: Path 73 --    2472 : 4    1 sky130_fd_sc_hd__o31a_2   A =  10.01  Df =23082.9 -251.5 ps  S =  48.9 ps  Cin =  2.3 ff  Cout =   2.5 ff  Cmax = 285.7 ff  G =  101  
ABC: Path 74 --    2478 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =23412.2 -460.6 ps  S =  52.5 ps  Cin =  2.4 ff  Cout =   4.8 ff  Cmax = 325.0 ff  G =  187  
ABC: Path 75 --    2479 : 3    3 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =23610.3  -15.3 ps  S =  57.3 ps  Cin =  4.5 ff  Cout =  15.1 ff  Cmax = 568.6 ff  G =  321  
ABC: Path 76 --    2498 : 3    4 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =23803.9 -138.2 ps  S = 190.5 ps  Cin =  4.6 ff  Cout =  13.2 ff  Cmax = 128.2 ff  G =  278  
ABC: Path 77 --    2508 : 3    4 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =23971.1  -87.9 ps  S =  56.9 ps  Cin =  4.5 ff  Cout =  15.0 ff  Cmax = 568.6 ff  G =  318  
ABC: Path 78 --    2515 : 1   10 sky130_fd_sc_hd__buf_8    A =  15.01  Df =24089.2  -73.9 ps  S =  64.8 ps  Cin =  7.0 ff  Cout =  32.4 ff  Cmax =5000.0 ff  G =  447  
ABC: Path 79 --    2579 : 3    2 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =24237.1  -65.3 ps  S = 231.0 ps  Cin =  4.6 ff  Cout =  16.9 ff  Cmax = 128.2 ff  G =  360  
ABC: Path 80 --    2580 : 2    2 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =24462.2  -85.1 ps  S = 218.7 ps  Cin =  8.5 ff  Cout =  13.1 ff  Cmax = 121.8 ff  G =  149  
ABC: Path 81 --    2581 : 2    3 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =24642.6  -56.7 ps  S = 177.4 ps  Cin =  8.5 ff  Cout =   9.5 ff  Cmax = 121.8 ff  G =  107  
ABC: Path 82 --    2597 : 4    2 sky130_fd_sc_hd__or4b_4   A =  13.76  Df =25129.4 -320.0 ps  S =  88.1 ps  Cin =  2.2 ff  Cout =   7.2 ff  Cmax = 533.8 ff  G =  302  
ABC: Path 83 --    2598 : 4    3 sky130_fd_sc_hd__or4_4    A =  11.26  Df =25565.1 -128.5 ps  S =  92.0 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 534.7 ff  G =  346  
ABC: Path 84 --    2621 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =25891.2 -320.7 ps  S =  63.5 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 325.0 ff  G =  353  
ABC: Path 85 --    2634 : 3   10 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =26138.6 -373.6 ps  S = 139.5 ps  Cin =  2.4 ff  Cout =  26.2 ff  Cmax = 309.5 ff  G = 1077  
ABC: Path 86 --    2682 : 5    1 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =26502.0 -552.9 ps  S =  69.7 ps  Cin =  2.3 ff  Cout =   8.4 ff  Cmax = 299.4 ff  G =  354  
ABC: Path 87 --    2683 : 2    4 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =26789.2 -651.0 ps  S = 333.4 ps  Cin =  8.5 ff  Cout =  23.0 ff  Cmax = 121.8 ff  G =  264  
ABC: Path 88 --    2693 : 2    2 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =27041.2 -693.0 ps  S = 201.5 ps  Cin =  8.5 ff  Cout =  11.6 ff  Cmax = 121.8 ff  G =  130  
ABC: Path 89 --    2696 : 5    2 sky130_fd_sc_hd__o41a_2   A =  12.51  Df =27518.3 -436.5 ps  S =  66.1 ps  Cin =  2.4 ff  Cout =   4.0 ff  Cmax = 305.8 ff  G =  164  
ABC: Path 90 --    2747 : 5    3 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =28006.7 -747.5 ps  S =  79.5 ps  Cin =  2.4 ff  Cout =   8.5 ff  Cmax = 324.1 ff  G =  340  
ABC: Path 91 --    2765 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =28337.1 -825.1 ps  S =  69.7 ps  Cin =  2.4 ff  Cout =  11.0 ff  Cmax = 325.0 ff  G =  452  
ABC: Path 92 --    2775 : 5    2 sky130_fd_sc_hd__a32o_2   A =  11.26  Df =28616.1 -925.8 ps  S =  64.4 ps  Cin =  2.3 ff  Cout =   6.5 ff  Cmax = 264.6 ff  G =  262  
ABC: Path 93 --    2776 : 1   10 sky130_fd_sc_hd__buf_6    A =  11.26  Df =28754.0 -927.9 ps  S =  83.9 ps  Cin =  4.6 ff  Cout =  36.9 ff  Cmax = 785.5 ff  G =  765  
ABC: Path 94 --    2834 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =29099.7-1122.4 ps  S =  64.2 ps  Cin =  2.4 ff  Cout =   9.1 ff  Cmax = 325.0 ff  G =  370  
ABC: Path 95 --    2836 : 3    2 sky130_fd_sc_hd__and3_4   A =  11.26  Df =29285.9 -245.4 ps  S =  53.4 ps  Cin =  2.4 ff  Cout =   7.4 ff  Cmax = 532.8 ff  G =  284  
ABC: Path 96 --    2841 : 5    1 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =29667.6 -257.4 ps  S =  58.0 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 324.1 ff  G =   95  
ABC: Path 97 --    2842 : 4    3 sky130_fd_sc_hd__or4_4    A =  11.26  Df =30094.2 -573.8 ps  S =  92.0 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 534.7 ff  G =  346  
ABC: Path 98 --    2867 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =30420.2 -767.1 ps  S =  63.4 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 325.0 ff  G =  352  
ABC: Path 99 --    2882 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =30735.2 -819.2 ps  S =  63.5 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 325.0 ff  G =  353  
ABC: Path100 --    2886 : 3    5 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =30967.0 -881.1 ps  S = 105.6 ps  Cin =  2.4 ff  Cout =  19.1 ff  Cmax = 309.5 ff  G =  774  
ABC: Path101 --    2916 : 4    9 sky130_fd_sc_hd__a211o_4  A =  17.52  Df =31346.9-1078.0 ps  S =  90.3 ps  Cin =  4.6 ff  Cout =  26.9 ff  Cmax = 559.4 ff  G =  563  
ABC: Path102 --    2952 : 4    3 sky130_fd_sc_hd__a22o_2   A =  10.01  Df =31619.1 -780.3 ps  S =  77.1 ps  Cin =  2.3 ff  Cout =  11.8 ff  Cmax = 301.2 ff  G =  478  
ABC: Path103 --    2953 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =31840.5 -255.2 ps  S =  46.6 ps  Cin =  2.4 ff  Cout =   6.3 ff  Cmax = 309.5 ff  G =  260  
ABC: Path104 --    3045 : 5    2 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =32353.4  -37.4 ps  S =  59.3 ps  Cin =  2.3 ff  Cout =   5.0 ff  Cmax = 299.4 ff  G =  200  
ABC: Path105 --    3048 : 5    2 sky130_fd_sc_hd__a221o_2  A =  11.26  Df =32671.5  -99.1 ps  S =  70.1 ps  Cin =  2.3 ff  Cout =   9.5 ff  Cmax = 299.4 ff  G =  379  
ABC: Path106 --    3049 : 3    7 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =32888.6  -97.7 ps  S =  81.5 ps  Cin =  4.5 ff  Cout =  24.9 ff  Cmax = 568.6 ff  G =  516  
ABC: Path107 --    3066 : 3    5 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =33127.3 -179.5 ps  S =  72.9 ps  Cin =  4.5 ff  Cout =  21.0 ff  Cmax = 568.6 ff  G =  442  
ABC: Path108 --    3089 : 3    4 sky130_fd_sc_hd__mux2_4   A =  15.01  Df =33435.1 -269.8 ps  S =  58.2 ps  Cin =  3.2 ff  Cout =   9.1 ff  Cmax = 536.5 ff  G =  264  
ABC: Path109 --    3097 : 4    1 sky130_fd_sc_hd__or4b_4   A =  13.76  Df =33934.0 -276.0 ps  S =  77.4 ps  Cin =  2.2 ff  Cout =   2.5 ff  Cmax = 533.8 ff  G =  105  
ABC: Path110 --    3098 : 4    2 sky130_fd_sc_hd__or4_4    A =  11.26  Df =34372.5 -436.3 ps  S =  95.6 ps  Cin =  2.4 ff  Cout =  10.5 ff  Cmax = 534.7 ff  G =  421  
ABC: Path111 --    3109 : 3    4 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =34569.8 -570.8 ps  S = 180.3 ps  Cin =  8.8 ff  Cout =  18.4 ff  Cmax = 221.6 ff  G =  199  
ABC: Path112 --    3129 : 3    5 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =34750.8 -395.6 ps  S =  77.4 ps  Cin =  4.5 ff  Cout =  23.2 ff  Cmax = 568.6 ff  G =  491  
ABC: Path113 --    3190 : 4    6 sky130_fd_sc_hd__a31o_2   A =   8.76  Df =34987.3 -376.1 ps  S = 157.1 ps  Cin =  2.4 ff  Cout =  25.5 ff  Cmax = 271.9 ff  G = 1038  
ABC: Path114 --    4482 : 3    9 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =35102.7 -221.9 ps  S = 280.7 ps  Cin =  8.8 ff  Cout =  34.3 ff  Cmax = 221.6 ff  G =  367  
ABC: Path115 --    4573 : 3    1 sky130_fd_sc_hd__or3_4    A =  11.26  Df =35491.4 -329.2 ps  S =  60.3 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 531.9 ff  G =  102  
ABC: Path116 --    4574 : 3    3 sky130_fd_sc_hd__o21a_2   A =   8.76  Df =35631.8 -173.3 ps  S =  74.3 ps  Cin =  2.4 ff  Cout =  11.5 ff  Cmax = 294.8 ff  G =  471  
ABC: Path117 --    4575 : 2    4 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =35832.2 -210.7 ps  S = 221.7 ps  Cin =  8.5 ff  Cout =  13.3 ff  Cmax = 121.8 ff  G =  149  
ABC: Path118 --    4588 : 4    2 sky130_fd_sc_hd__nor4_2   A =  12.51  Df =36108.5 -183.5 ps  S = 284.7 ps  Cin =  4.3 ff  Cout =   7.5 ff  Cmax =  64.1 ff  G =  166  
ABC: Path119 --    4595 : 4    1 sky130_fd_sc_hd__and4bb_4 A =  16.27  Df =36368.4 -250.9 ps  S =  47.5 ps  Cin =  1.9 ff  Cout =   2.5 ff  Cmax = 461.4 ff  G =  121  
ABC: Path120 --    4604 : 4    3 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =36717.8 -245.9 ps  S =  73.5 ps  Cin =  2.4 ff  Cout =  12.6 ff  Cmax = 325.0 ff  G =  510  
ABC: Path121 --    4608 : 3    2 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =36855.7 -148.3 ps  S =  55.2 ps  Cin =  4.5 ff  Cout =  14.7 ff  Cmax = 568.6 ff  G =  308  
ABC: Path122 --    4644 : 1   10 sky130_fd_sc_hd__buf_8    A =  15.01  Df =36979.0 -136.8 ps  S =  72.3 ps  Cin =  7.0 ff  Cout =  37.4 ff  Cmax =5000.0 ff  G =  513  
ABC: Path123 --    4728 : 3    2 sky130_fd_sc_hd__mux2_4   A =  15.01  Df =37198.6  -49.6 ps  S =  60.4 ps  Cin =  3.2 ff  Cout =  10.0 ff  Cmax = 536.5 ff  G =  301  
ABC: Path124 --    4736 : 2    1 sky130_fd_sc_hd__and2_2   A =   7.51  Df =37335.5   -7.6 ps  S =  36.6 ps  Cin =  1.5 ff  Cout =   2.6 ff  Cmax = 303.0 ff  G =  164  
ABC: Path125 --    4737 : 3    1 sky130_fd_sc_hd__o21a_2   A =   8.76  Df =37514.9  -87.7 ps  S =  32.1 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 294.8 ff  G =   98  
ABC: Path126 --    4741 : 3    1 sky130_fd_sc_hd__or3_4    A =  11.26  Df =37859.2 -271.7 ps  S =  60.1 ps  Cin =  2.4 ff  Cout =   2.5 ff  Cmax = 531.9 ff  G =  101  
ABC: Path127 --    4745 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =38181.2  -27.8 ps  S =  45.0 ps  Cin =  2.4 ff  Cout =   2.4 ff  Cmax = 325.0 ff  G =   98  
ABC: Path128 --    4749 : 3    1 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =38380.9 -124.2 ps  S =  32.5 ps  Cin =  2.4 ff  Cout =   2.4 ff  Cmax = 309.5 ff  G =   99  
ABC: Path129 --    4773 : 4    1 sky130_fd_sc_hd__a22o_2   A =  10.01  Df =38610.4 -225.2 ps  S =  44.5 ps  Cin =  2.3 ff  Cout =   4.6 ff  Cmax = 301.2 ff  G =  186  
ABC: Path130 --    4777 : 4    3 sky130_fd_sc_hd__a211oi_2 A =  12.51  Df =38875.4 -418.2 ps  S = 230.2 ps  Cin =  4.4 ff  Cout =   8.3 ff  Cmax =  88.8 ff  G =  182  
ABC: Path131 --    4785 : 3    4 sky130_fd_sc_hd__o21ai_2  A =   8.76  Df =38998.8 -324.7 ps  S = 195.2 ps  Cin =  4.5 ff  Cout =  13.6 ff  Cmax = 139.2 ff  G =  284  
ABC: Path132 --    4797 : 5    1 sky130_fd_sc_hd__a221oi_2 A =  15.01  Df =39602.6 -757.2 ps  S = 679.6 ps  Cin =  4.5 ff  Cout =  33.4 ff  Cmax =  96.1 ff  G =  746  
ABC: Start-point = pi38 (\display.refresh_counter [19]).  End-point = po43 (\seg [6]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  379/  429  lat =    0  nd =  4733  edge =  11436  area =40461.22  delay =165.00  lev = 165
ABC: + write_blif /tmp/yosys-abc-1d06l5/output.blif 

62.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__inv_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21boi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a41oi_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211a_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o311a_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nand4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21a_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21bai_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4bb_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_12 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3_4 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__inv_8 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__buf_6 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:       26
ABC RESULTS:   sky130_fd_sc_hd__nand2_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4b_4 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21bo_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_4 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and4bb_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a21o_4 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       31
ABC RESULTS:   sky130_fd_sc_hd__buf_8 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:       39
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor4bb_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__or3b_4 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       91
ABC RESULTS:   sky130_fd_sc_hd__mux2_1 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__bufinv_8 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__mux2_4 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__and4_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      104
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:       42
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:       41
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      101
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      180
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:       94
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      119
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      222
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      405
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      342
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:      308
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:      102
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:      306
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      227
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      195
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:       45
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      261
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      609
ABC RESULTS:        internal signals:    20494
ABC RESULTS:           input signals:      379
ABC RESULTS:          output signals:      429
Removing temp directory.

63. Executing SETUNDEF pass (replace undef values with defined constants).

64. Executing HILOMAP pass (mapping to constant drivers).

65. Executing SPLITNETS pass (splitting up multi-bit signals).

66. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \semi_cpu..
Removed 576 unused cells and 21711 unused wires.
<suppressed ~610 debug messages>

67. Executing INSBUF pass (insert buffer cells for connected wires).

68. Executing CHECK pass (checking for obvious problems).
Checking module semi_cpu...
Found and reported 0 problems.

69. Printing statistics.

=== semi_cpu ===

   Number of wires:               4685
   Number of wire bits:           4729
   Number of public wires:         351
   Number of public wire bits:     395
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4534
     sky130_fd_sc_hd__a2111o_2      11
     sky130_fd_sc_hd__a2111oi_2      4
     sky130_fd_sc_hd__a211o_2       71
     sky130_fd_sc_hd__a211o_4        2
     sky130_fd_sc_hd__a211oi_2      13
     sky130_fd_sc_hd__a21bo_2       26
     sky130_fd_sc_hd__a21bo_4        2
     sky130_fd_sc_hd__a21boi_2      12
     sky130_fd_sc_hd__a21boi_4       1
     sky130_fd_sc_hd__a21o_2       180
     sky130_fd_sc_hd__a21o_4         9
     sky130_fd_sc_hd__a21oi_2      222
     sky130_fd_sc_hd__a21oi_4       13
     sky130_fd_sc_hd__a221o_2       19
     sky130_fd_sc_hd__a221oi_2       5
     sky130_fd_sc_hd__a22o_2       104
     sky130_fd_sc_hd__a22oi_2       13
     sky130_fd_sc_hd__a2bb2o_2      31
     sky130_fd_sc_hd__a2bb2o_4       1
     sky130_fd_sc_hd__a2bb2oi_2      1
     sky130_fd_sc_hd__a311o_2       10
     sky130_fd_sc_hd__a311oi_2       4
     sky130_fd_sc_hd__a31o_2        91
     sky130_fd_sc_hd__a31o_4         2
     sky130_fd_sc_hd__a31oi_2       18
     sky130_fd_sc_hd__a32o_2        17
     sky130_fd_sc_hd__a32oi_2        1
     sky130_fd_sc_hd__a41o_2         4
     sky130_fd_sc_hd__a41oi_2        1
     sky130_fd_sc_hd__a41oi_4        1
     sky130_fd_sc_hd__and2_2       261
     sky130_fd_sc_hd__and2_4         4
     sky130_fd_sc_hd__and2b_2       41
     sky130_fd_sc_hd__and2b_4        1
     sky130_fd_sc_hd__and3_2       119
     sky130_fd_sc_hd__and3_4         6
     sky130_fd_sc_hd__and3b_2       13
     sky130_fd_sc_hd__and4_2         7
     sky130_fd_sc_hd__and4_4         2
     sky130_fd_sc_hd__and4b_2        6
     sky130_fd_sc_hd__and4bb_2       5
     sky130_fd_sc_hd__and4bb_4       1
     sky130_fd_sc_hd__buf_1        225
     sky130_fd_sc_hd__buf_2          8
     sky130_fd_sc_hd__buf_4         64
     sky130_fd_sc_hd__buf_6         29
     sky130_fd_sc_hd__buf_8         12
     sky130_fd_sc_hd__bufinv_8       5
     sky130_fd_sc_hd__dfrtp_2       37
     sky130_fd_sc_hd__dfxtp_2      148
     sky130_fd_sc_hd__inv_12         4
     sky130_fd_sc_hd__inv_2        195
     sky130_fd_sc_hd__inv_4          1
     sky130_fd_sc_hd__inv_8          1
     sky130_fd_sc_hd__mux2_1        20
     sky130_fd_sc_hd__mux2_2       306
     sky130_fd_sc_hd__mux2_4        15
     sky130_fd_sc_hd__nand2_2      342
     sky130_fd_sc_hd__nand2_4        2
     sky130_fd_sc_hd__nand2b_2       4
     sky130_fd_sc_hd__nand3_2       35
     sky130_fd_sc_hd__nand3b_2       4
     sky130_fd_sc_hd__nand4_2       11
     sky130_fd_sc_hd__nand4bb_2      1
     sky130_fd_sc_hd__nor2_2       405
     sky130_fd_sc_hd__nor2_4         1
     sky130_fd_sc_hd__nor2b_2        4
     sky130_fd_sc_hd__nor3_2        13
     sky130_fd_sc_hd__nor3b_2        1
     sky130_fd_sc_hd__nor4_2         5
     sky130_fd_sc_hd__nor4bb_2       1
     sky130_fd_sc_hd__o2111a_2       5
     sky130_fd_sc_hd__o2111ai_2      2
     sky130_fd_sc_hd__o211a_2       42
     sky130_fd_sc_hd__o211a_4        2
     sky130_fd_sc_hd__o211ai_2       6
     sky130_fd_sc_hd__o21a_2       101
     sky130_fd_sc_hd__o21a_4         1
     sky130_fd_sc_hd__o21ai_2      102
     sky130_fd_sc_hd__o21ai_4        1
     sky130_fd_sc_hd__o21ba_2       25
     sky130_fd_sc_hd__o21bai_2      10
     sky130_fd_sc_hd__o21bai_4       1
     sky130_fd_sc_hd__o221a_2        8
     sky130_fd_sc_hd__o22a_2        30
     sky130_fd_sc_hd__o22ai_2       11
     sky130_fd_sc_hd__o2bb2a_2      28
     sky130_fd_sc_hd__o2bb2a_4       1
     sky130_fd_sc_hd__o311a_2        5
     sky130_fd_sc_hd__o311a_4        1
     sky130_fd_sc_hd__o311ai_2       1
     sky130_fd_sc_hd__o31a_2        39
     sky130_fd_sc_hd__o31a_4         2
     sky130_fd_sc_hd__o31ai_2       17
     sky130_fd_sc_hd__o32a_2         9
     sky130_fd_sc_hd__o32ai_2        2
     sky130_fd_sc_hd__o41a_2         5
     sky130_fd_sc_hd__o41ai_2        1
     sky130_fd_sc_hd__or2_2        227
     sky130_fd_sc_hd__or2_4          3
     sky130_fd_sc_hd__or2b_2        45
     sky130_fd_sc_hd__or3_2         71
     sky130_fd_sc_hd__or3_4          8
     sky130_fd_sc_hd__or3b_2        23
     sky130_fd_sc_hd__or3b_4         4
     sky130_fd_sc_hd__or4_2         16
     sky130_fd_sc_hd__or4_4         10
     sky130_fd_sc_hd__or4b_2         6
     sky130_fd_sc_hd__or4b_4         5
     sky130_fd_sc_hd__or4bb_2        1
     sky130_fd_sc_hd__or4bb_4        1
     sky130_fd_sc_hd__xnor2_2      308
     sky130_fd_sc_hd__xor2_2        94

   Chip area for module '\semi_cpu': 43135.120000

70. Executing Verilog backend.
Dumping module `\semi_cpu'.

71. Executing JSON backend.

End of script. Logfile hash: bff000a907, CPU: user 12.20s system 0.72s, MEM: 1092.71 MB peak
Yosys 0.38 (git sha1 543faed9c8c, clang++ 17.0.6 -fPIC -Os)
Time spent: 37% 2x abc (7 sec), 23% 95x opt_expr (4 sec), ...
